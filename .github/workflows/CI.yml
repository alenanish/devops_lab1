name: CI

# Controls when the workflow will run
# Triggers the workflow on push and pull_request
on: [push, pull_request]
  

jobs:
  build_and_test:
    name: Build, Lint and Test
    runs-on: ubuntu-latest
    #permissions:
    #  actions: read
    #  contents: read
    #  security-events: write

    #strategy:
    #  fail-fast: false
    #  matrix:
    #    language: [ 'cpp' ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.3
    # Automatically detect common vulnerability and coding errors
    #- name: Initialize CodeQL
    #  uses: github/codeql-action/init@v2
    #  with:
    #    languages: ${{ matrix.language }}
        
    - name: Install gtest
      run: |
        sudo apt-get install libgtest-dev
        sudo apt-get install cmake
        
    - name: Build
      run: |
        g++ Test.cpp LinkedList.cpp -o test -lgtest -lpthread  
        g++ Main.cpp LinkedList.cpp -o source
       
    #- name: Perform CodeQL Analysis
    #  uses: github/codeql-action/analyze@v2
    #  with:
    #    category: "/language:${{matrix.language}}"
    - name: Install cppcheck
      run: |
        sudo apt update
        sudo apt install cppcheck
        
    - name: Perform Static Code Analysis 
      run: cppcheck LinkedList.cpp Main.cpp LinkedList.h Test.cpp
      
    - name: Install cpplint
      run: |
        sudo apt -y install python3-pip
        sudo pip install cpplint
    - name: Perform Style Code Analysis 
      run: cpplint --filter=-build/include_subdir LinkedList.cpp Test.cpp Main.cpp LinkedList.hpp
        
    - name: Perform Static Code Analysis 
      run: cppcheck LinkedList.cpp Main.cpp LinkedList.h Test.cpp
    
    
    - name: Test
      run: ./test
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: cpp_app
        path: source
        retention-days: 10            
          
  docker:
    name: Docker
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
    - name: Set Up Docker Buildx
      uses: docker/setup-buildx-action@v2.7.0
      
    - name: Docker Build and Push
      uses: docker/build-push-action@v4.1.1
      with: 
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/linked_list:latest
  send_telegram:
    name: Send Telegram
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: cpp_app
    - name: Send Telegram Message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        document: source*
        message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
        
       
